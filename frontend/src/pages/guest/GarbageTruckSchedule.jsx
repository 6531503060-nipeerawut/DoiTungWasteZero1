import React, { useEffect, useState, useRef } from 'react';
import axios from 'axios';
import { Link, useNavigate } from 'react-router-dom';
import { FaHome, FaTrash, FaTachometerAlt, FaBars } from 'react-icons/fa';
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap/dist/js/bootstrap.bundle.min.js';

function GarbageTruckSchedule() {
    document.title = "DoiTung Zero-Waste";

    const [isDropdownOpen, setDropdownOpen] = useState(false);
    const dropdownRef = useRef(null);
    const navigate = useNavigate();

    useEffect(() => {
        axios.get(`${process.env.REACT_APP_BACKEND_URL}/garbagetruckschedule`)
            .then(res => console.log(res.data))
            .catch(err => console.log(err));
    }, []);

    useEffect(() => {
        const handleClickOutside = (event) => {
            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
                setDropdownOpen(false);
            }
        };
        if (isDropdownOpen) {
            document.addEventListener("mousedown", handleClickOutside);
        }
        return () => document.removeEventListener("mousedown", handleClickOutside);
    }, [isDropdownOpen]);

    const handleLogout = async () => {
        try {
            await axios.get(`${process.env.REACT_APP_BACKEND_URL}/logout`);
            navigate('/login');
        } catch (err) {
            console.error("Logout failed:", err);
        }
    };

    

    return (
        <div className='container-fluid d-flex flex-column min-vh-100'>
            <>
                {/* Navbar */}
                <nav className="navbar navbar-light bg-light d-flex justify-content-between p-3">
                    <span className="navbar-brand font-weight-bold">DoiTung Zero - Waste</span>
                    <div className="dropdown" ref={dropdownRef}>
                        <button
                            className="btn btn-secondary dropdown-toggle"
                            type="button"
                            onClick={() => setDropdownOpen(!isDropdownOpen)}
                        >
                            <FaBars />
                        </button>
                        <ul className={`dropdown-menu dropdown-menu-end ${isDropdownOpen ? 'show' : ''}`}>
                            <li><Link className="dropdown-item" to="/waste-price">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠</Link></li>
                            <li><Link className="dropdown-item" to="/category">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏¢‡∏∞</Link></li>
                            <li><Link className="dropdown-item" to="/GarbageTruckSchedule">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏¢‡∏∞</Link></li>
                            <li><Link className="dropdown-item" to="/carbons">‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏≤‡∏£‡πå‡∏ö‡∏≠‡∏ô</Link></li>
                            <li><button className="dropdown-item text-danger" onClick={handleLogout}>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button></li>
                        </ul>
                    </div>
                </nav>

                {/* Garbage Schedule */}
                <GarbageData />

                {/* Footer */}
                <footer className="bg-light py-3 d-flex justify-content-around border-top mt-auto">
                <Link to="/" className="text-dark text-decoration-none"><FaHome size={30} /></Link>
                <Link to="/wastedata" className="text-dark text-decoration-none"><FaTrash size={30} /></Link>
                <Link to="/dashboard" className="text-dark text-decoration-none"><FaTachometerAlt size={30} /></Link>
                </footer>
            </>
        </div>
    );
}

const GarbageData = () => {
    const [selectedDay, setSelectedDay] = useState(null);

    const garbageData = {
        Monday: {
            type: '‡∏Ç‡∏¢‡∏∞‡πÄ‡∏õ‡∏µ‡∏¢‡∏Å ‡πÄ‡∏õ‡∏µ‡∏¢‡∏Å‡∏ô‡πâ‡∏≥',
            examples: ['‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å', '‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©', '‡πÇ‡∏ü‡∏° ‡∏ü‡∏≠‡∏á‡∏ô‡πâ‡∏≥', '‡∏ñ‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô', '‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤'],
        },
        Tuesday: {
            type: '‡∏Ç‡∏¢‡∏∞‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏¥‡∏á ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô',
            examples: ['‡∏ñ‡∏∏‡∏á‡∏Ç‡∏ô‡∏°', '‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤', '‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ô‡∏°'],
        },
        Wednesday: {
            type: '‡∏Ç‡∏¢‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥',
            examples: ['‡∏ú‡πâ‡∏≤‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢', '‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢', '‡πÅ‡∏û‡∏°‡πÄ‡∏û‡∏¥‡∏™'],
        },
        Friday: {
            type: '‡∏Ç‡∏¢‡∏∞‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)',
            examples: ['‡∏´‡∏•‡∏≠‡∏î‡πÑ‡∏ü', '‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà', '‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ', '‡∏™‡πÄ‡∏õ‡∏£‡∏¢‡πå'],
        },
    };

    const handleClick = (day) => {
        setSelectedDay(day);
    };

    return (
        <div className="container my-4">
            <h2 className="mb-4">üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏¢‡∏∞</h2>
            <div className="d-flex flex-wrap gap-2 mb-4">
                <button className="btn btn-outline-primary" onClick={() => handleClick('Monday')}>‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå</button>
                <button className="btn btn-outline-primary" onClick={() => handleClick('Tuesday')}>‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£</button>
                <button className="btn btn-outline-primary" onClick={() => handleClick('Wednesday')}>‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò</button>
                <button className="btn btn-outline-primary" onClick={() => handleClick('Friday')}>‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå</button>
            </div>

            {selectedDay && (
                <div className="card shadow-sm">
                    <div className="card-body">
                        <h5 className="card-title">üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô{{
                            Monday: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
                            Tuesday: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£',
                            Wednesday: '‡∏û‡∏∏‡∏ò',
                            Friday: '‡∏®‡∏∏‡∏Å‡∏£‡πå'
                        }[selectedDay]}</h5>
                        <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏¢‡∏∞:</strong> {garbageData[selectedDay].type}</p>
                        <p><strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡∏¢‡∏∞:</strong></p>
                        <ul>
                            {garbageData[selectedDay].examples.map((item, index) => (
                                <li key={index}>- {item}</li>
                            ))}
                        </ul>
                    </div>
                </div>
            )}
        </div>
    );
};

export default GarbageTruckSchedule;
